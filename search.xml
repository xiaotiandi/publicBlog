<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[测试]]></title>
    <url>%2FpublicBlog%2F2999-12-30-59cdbec3.html</url>
    <content type="text"><![CDATA[测试 世界你好！ /publicBlog/2018-08-15-16107.html 这是摘要(写了上面的description,这里就不起作用啦) title: Hello World abbrlink: 16107 date: 2018-08-16 00:00:00 Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post $ hexo new "My New Post" More info: Writing Run server $ hexo server More info: Server Generate static files $ hexo generate More info: Generating Deploy to remote sites $ hexo deploy More info: Deployment hello-world.mdview raw12345678910111213141516171819202122232425262728293031323334353637383940---title: Hello Worldabbrlink: 16107date: 2018-08-16 00:00:00---Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).## Quick Start### Create a new post``` bash$ hexo new "My New Post"```More info: [Writing](https://hexo.io/docs/writing.html)### Run server``` bash$ hexo server```More info: [Server](https://hexo.io/docs/server.html)### Generate static files``` bash$ hexo generate```More info: [Generating](https://hexo.io/docs/generating.html)### Deploy to remote sites``` bash$ hexo deploy```More info: [Deployment](https://hexo.io/docs/deployment.html) 点击显/隐内容 hahah hfhadfh fadfh 点击显/隐内容 测试Tag Plugins Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake NEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 NEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 123 123 789 12389076456 点击显/隐内容 something you want to fold, include code block. something you want to fold, include code block. something you want to fold, include code block. something you want to fold, include code block. something you want to fold, include code block. something you want to fold, include code block. something you want to fold, include code block. something you want to fold, include code block. 点击显/隐内容]]></content>
      <categories>
        <category>技术构架</category>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>docker</tag>
        <tag>技术构架</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo博客配置-自建标签Bug解决方案]]></title>
    <url>%2FpublicBlog%2F2018-09-20-dd56df28.html</url>
    <content type="text"><![CDATA[本文所用的架构或思路参考该文：hexo博客配置-主题管理与配置 修复自建tag里写代码块，渲染成undefined的问题 只需添加文件hexo-theme-next/scripts/custom/debugCustom.js如下 debugCustom.jsview raw1234567891011121314151617181920212223242526//ledong修复自建tag里写 ```代码块```，渲染成 undefined 的问题: // https://www.oyohyee.com/post/Note/hexo_tag//* @haohuawu 修复 Nunjucks 的 tag 里写 ```代码块```，最终都会渲染成 undefined 的问题 https://github.com/hexojs/hexo/issues/2400*/const rEscapeContent = /&lt;escape(?:[^&gt;]*)&gt;([\s\S]*?)&lt;\/escape&gt;/g;const placeholder = '\uFFFD';const rPlaceholder = /(?:&lt;|&amp;lt;)\!--\uFFFD(\d+)--(?:&gt;|&amp;gt;)/g;const cache = [];function escapeContent(str) { return '&lt;!--' + placeholder + (cache.push(str) - 1) + '--&gt;';}hexo.extend.filter.register('before_post_render', function(data) { data.content = data.content.replace(rEscapeContent, function(match, content) { return escapeContent(content); }); return data;});hexo.extend.filter.register('after_post_render', function(data) { data.content = data.content.replace(rPlaceholder, function() { return cache[arguments[1]]; }); return data;}); 参考 参考1：Hexo添加代码块折叠 参考2：Hexo自建标签渲染代码段Bug解决方案]]></content>
      <categories>
        <category>技术构架</category>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>技术构架</tag>
        <tag>个人博客</tag>
        <tag>代码风格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客配置-总览]]></title>
    <url>%2FpublicBlog%2F2018-09-20-f55aca41.html</url>
    <content type="text"><![CDATA[1. 个人总结的配置方案 为什么用hexo-coding-next-docker构建个人博客 Hexo博客搭建-用hexo-coding-next搭建个人博客 hexo博客配置-主题管理与配置 hexo博客配置-代码块折叠 hexo博客配置-插入各类文件 hexo博客配置-添加首行缩进和高亮代码块缩进 hexo博客配置-自建标签Bug解决方案 下文针对个人配置Hexo博客的事项，总览已办待办。 添加版权申明 先更改themes/hexo-theme-next/layout/_macro/post-copyright.swig post-copyright.swigview raw1234567891011121314&lt;ul class=&quot;post-copyright&quot;&gt; &lt;li class=&quot;post-copyright-author&quot;&gt; &lt;strong&gt;{{ __(&apos;post.copyright.author&apos;) + __(&apos;symbol.colon&apos;) }} &lt;/strong&gt;{# #}{{ post.author | default(author) }}{##}&lt;/li&gt; &lt;li class=&quot;post-copyright-link&quot;&gt; &lt;strong&gt;{{ __(&apos;post.copyright.link&apos;) + __(&apos;symbol.colon&apos;) }}&lt;/strong&gt; &lt;a href=&quot;{{ post.url | default(post.permalink) }}&quot; title=&quot;{{ post.title }}&quot;&gt;{{ post.url | default(post.permalink) }}&lt;/a&gt; &lt;/li&gt; &lt;li class=&quot;post-copyright-license&quot;&gt; &lt;strong&gt;{{ __(&apos;post.copyright.license_title&apos;) + __(&apos;symbol.colon&apos;) }} &lt;/strong&gt;{# #}{{ __(&apos;post.copyright.license_content&apos;, theme.post_copyright.license) + theme.post_copyright.license_content }}{##}&lt;/li&gt;&lt;/ul&gt; 再修改themes/hexo-theme-next/_config.yml 1234post_copyright: enable: true license_content: 作者拥有版权，转载请注明作者及出处。 license: &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="external nofollow" target="_blank"&gt;CC BY-NC-SA 4.0&lt;/a&gt; 注意，为了文章链接正确，需修改/home/ledong/Desktop/myBlog/blog_public/_config.yml 1url: http://localhost:4000 参考：hexo给博客添加版权 2. 别的功能事项 2.1. 参考Alvabill的博客-hexo搭建个人博客–NexT主题优化 2.1.1. 不需要注册 文章排序优先级设置 左上角或右上角的Github样式 添加背景动画 修改文章底部标签样式 文章末尾统一添加“本文结束”标记 修改作者头像并旋转 添加看板娘 分类和标签的设置 添加RSS 底部显示建站时间和图标修改 阅读次数和字数统计 推荐阅读 微信支付宝打赏功能，此处为了显示好看，编辑了文件themes/hexo-theme-next/layout/_macro/reward.swig 2.1.2. 需要注册 添加评论系统 添加文章评分功能 在线联系 2.1.3. 待完善功能 设置站点icon 添加侧边栏社交链接 添加侧边栏友情链接 2.2. 参考别的博客 2.2.1. 不需要注册 博客搭建相册 后台管理与在线编辑 在Hexo发布博客的MarkDown文件中引入JS代码 hexo-renderer-pandoc 定制\custom.styl hexo next主题为博客添加分享功能 hexo给博客添加版权、共享按钮、打赏 hexo-include 漢語標準格式支持 进度条支持 新版阅读次数和字数统计 添加站内搜索功能 新建带日期格式的博文 链接持久化 复选框(Checkbox)支持 主页显示摘要 渲染Latex数学公式 如何在Hexo中渲染Latex数学公式 guthub-Hexo-renderer-markdown-it-plus 2.2.2. 需要注册 添加百度站内搜索 2.3. 其他想到的 背景音乐 背景图片 文章标题处添加作者 check-box不能用 2.4. 需要参考的网页 Hexo NexT主题相关配置的整理总结 Hexo（NexT 主题）评论系统哪个好？ Hexo-NexT主题添加评论功能（来必力、Hypercomments、畅言、友言) 3. 注意事项 另外，next主题从5到6的版本更新要注意，许多lib不能用了。从 NexT v5.1.x 更新 4. 其他参考 Hexo NexT主题相关配置的整理总结 Hexo搭建个人博客–NexT主题优化-来自Alvabill Hexo博客NexT主题终极配置 hexo的next主题个性化教程:打造炫酷网站 Hexo官网插件 Hexo Next 四种主题 hexo/next常见插件使用技巧 Hexo NexT主题相关配置的整理总结]]></content>
      <categories>
        <category>技术构架</category>
        <category>个人博客</category>
        <category>计划</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>技术构架</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown使用技巧]]></title>
    <url>%2FpublicBlog%2F2018-09-19-115f9f7.html</url>
    <content type="text"><![CDATA[MarkDown支持高亮的语言 在Markdown中包含其他文件pandoc-include-code 在Markdown中包含其他文件pandoc-codeblock-include注意，该方法需要使用Cabal（Haskell）环境的pandoc。在ubuntu里，其目录在/home/ledong/.cabal/bin/下面。 在hexo中包含其他Markdown文件hexo-include-markdown Hexo 使用 Markdown 编辑技巧大全]]></content>
      <categories>
        <category>软件使用</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo博客配置-添加首行缩进和高亮代码块缩进]]></title>
    <url>%2FpublicBlog%2F2018-09-19-dab4328f.html</url>
    <content type="text"><![CDATA[本文所用的架构或思路参考该文：hexo博客配置-主题管理与配置 添加首行缩进和高亮代码块的缩进 修改主题目录下的source/css/_custom/custom.styl 123.post-body p &#123; text-indent: 1em; &#125;.post-body li&gt;p &#123; text-indent: 0em; &#125;.post-body div.highlight-wrap &#123; margin-left: 2em; margin-right: 2em;&#125; 参考:建议加入文字首行缩进]]></content>
      <categories>
        <category>技术构架</category>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>技术构架</tag>
        <tag>个人博客</tag>
        <tag>文本风格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo博客配置-代码块折叠]]></title>
    <url>%2FpublicBlog%2F2018-09-19-1985df3b.html</url>
    <content type="text"><![CDATA[本文所用的架构或思路参考该文：hexo博客配置-主题管理与配置 添加代码块折叠功能 先建立hexo-theme-next/scripts/custom/fold_tag.js， fold_tag.jsview raw123456789101112//ledong代码折叠功能添加: https://blog.rmiao.top/hexo-fold-block//* global hexo */// Usage: {% fold ???? %} Something {% endfold %}function fold (args, content) { var text = args[0]; if(!text) text = "点击显/隐"; var str1 = '&lt;div class="fold_hider"&gt;&lt;div class="close hider_title"&gt;&lt;span style="color:gray;font-size:12px"&gt;' + text + '&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;' var str2 = '&lt;div class="fold"&gt;\n'+ hexo.render.renderSync({text: content, engine: 'markdown'}) + '\n&lt;/div&gt;' return '&lt;div style="margin-top: -20px;"&gt;'+ str1 +str2 + str1+ '&lt;/div&gt;';}hexo.extend.tag.register('fold', fold, {ends: true}); 还有hexo-theme-next/source/custom/fold_action.js文件， fold_action.jsview raw12345678910//ledong代码折叠功能添加: https://blog.rmiao.top/hexo-fold-block/$(document).ready(function(){ $(document).on('click', '.fold_hider', function(){ $('&gt;.fold', this.parentNode).slideToggle(); $('&gt;:first', this).toggleClass('open'); }); //默认情况下折叠 $("div.fold").css("display","none");}); 然后创建文件hexo-theme-next/layout/_custom/post-details.swig如下 1234&#123;# hexo-theme-next/layout/_custom/post-details.swigadd to: themes/hexo-theme-next/layout/_scripts/pages/post-details.swig#&#125;&lt;script type="text/javascript" src="&#123;&#123; url_for(theme.custom) &#125;&#125;/fold_action.js?v=&#123;&#123; version &#125;&#125;"&gt;&lt;/script&gt; 并在themes/hexo-theme-next/layout/_scripts/pages/post-details.swig的末尾加上： 1&#123;% include &apos;../../_custom/post-details.swig&apos; %&#125; 注意：还需修改主题下的_config.yml如下，即加入&quot;custom: custom&quot;(其实是配置了source目录下的文件夹). 12345# Assetscss: cssjs: jsimages: imagescustom: custom 最后，修改hexo-theme-next/source/css/_custom/custom.styl配置风格： 12345678910111213//ledong代码折叠功能添加: https://www.cnblogs.com/woshimrf/p/hexo-fold-block.html.hider_title&#123; font-family: "Microsoft Yahei"; cursor: pointer;&#125;.close:before&#123; content: "▼";&#125;.open:before&#123; content: "▲";&#125;.post-body div.fold_hider &#123; margin-left: 1.5em&#125;.post-body div.fold &#123; margin-top: -15px&#125; 使用方法 点击显/隐内容 123&#123;% fold 点击显/隐内容 %&#125;somthing...&#123;% endfold %&#125; 点击显/隐内容 修复自建tag里写代码块，渲染成undefined的问题 参考该文：hexo博客配置-自建标签Bug解决方案 只需添加文件hexo-theme-next/scripts/custom/debugCustom.js如下 debugCustom.jsview raw1234567891011121314151617181920212223242526//ledong修复自建tag里写 ```代码块```，渲染成 undefined 的问题: // https://www.oyohyee.com/post/Note/hexo_tag//* @haohuawu 修复 Nunjucks 的 tag 里写 ```代码块```，最终都会渲染成 undefined 的问题 https://github.com/hexojs/hexo/issues/2400*/const rEscapeContent = /&lt;escape(?:[^&gt;]*)&gt;([\s\S]*?)&lt;\/escape&gt;/g;const placeholder = '\uFFFD';const rPlaceholder = /(?:&lt;|&amp;lt;)\!--\uFFFD(\d+)--(?:&gt;|&amp;gt;)/g;const cache = [];function escapeContent(str) { return '&lt;!--' + placeholder + (cache.push(str) - 1) + '--&gt;';}hexo.extend.filter.register('before_post_render', function(data) { data.content = data.content.replace(rEscapeContent, function(match, content) { return escapeContent(content); }); return data;});hexo.extend.filter.register('after_post_render', function(data) { data.content = data.content.replace(rPlaceholder, function() { return cache[arguments[1]]; }); return data;}); 局限 不能如此嵌套使用（但可嵌套正常代码块），待改进 123&#123;% fold 点击显/隐内容 %&#125;&#123;% include_code [title] [lang:language] path/to/file %&#125;&#123;% endfold %&#125; 参考 参考1：Hexo添加代码块折叠 参考2：Hexo自建标签渲染代码段Bug解决方案]]></content>
      <categories>
        <category>技术构架</category>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>技术构架</tag>
        <tag>个人博客</tag>
        <tag>代码风格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo博客配置-插入各类文件]]></title>
    <url>%2FpublicBlog%2F2018-09-19-dab4328f.html</url>
    <content type="text"><![CDATA[本文所用的架构或思路参考该文：hexo博客配置-主题管理与配置 插入自己的博客或post的链接 12&#123;% post_path slug %&#125;&#123;% post_link slug [title] %&#125; post_path hello-world的方式得到:/2018-08-15-16107.html post_link hello-world 世界你好！的效果是:世界你好！ 参考:hexo-tag-plugins 插入代码文件 先修改总的_config.yml 1code_dir: ./ #表示从source目录开始 然后在要插入代码的md文件里相对source目录写文件路径 1&#123;% include_code [title] [lang:language] path/to/file %&#125; 参考:hexo-tag-plugins 插入markdown文件 安装hexo-include-markdown 1npm install hexo-include-markdown --save 在总的_config.yml里添加 123include_markdown: dir: source/ # Base directory of template markdown verbose : true # If you want to check the path of markdown that use &lt;!-- md --&gt; tag , please set the true. 在md文件里添加相对于source的路径 1&lt;!-- md path/to/template.md --&gt; 参考:hexo-include-markdown 插入其他文件 插入视频、图片等等，网上可收集的实在多，不赘述。归根结底，要么写Markdown语法，要么参考官网添加tag的方式，即如下网址： hexo-tag-plugins英文说明 hexo-tag-plugins中文说明]]></content>
      <categories>
        <category>技术构架</category>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>技术构架</tag>
        <tag>个人博客</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo博客配置-主题管理与配置]]></title>
    <url>%2FpublicBlog%2F2018-08-17-f4bcb518.html</url>
    <content type="text"><![CDATA[使用git管理主题 更新远程代码到本地仓库 1234git fetch origin master:temp //从远程的origin仓库的master分支下载到本地并新建一个分支tempgit diff temp//比较master分支和temp分支的不同git merge temp//合并temp分支到master分支git branch -d temp//删除temp 如果git diff和git log没反应 1234git config --global core.pager 'less'## orgit --no-pager diffgit --no-pager log 对主题进行配置的基本思路 先将主题目录结构调整如下： 1234567891011121314151617181920212223242526272829调整前hexo-theme-next/ layout/ _custom/ head.swig header.swig sidebar.swig scripts/ source/ css/*/custom.styl调整后：hexo-theme-next/ layout/ _scripts/ pages/ post-details.swig (该文件已存在，但可添加对your.swig的调用) _custom/ head.swig header.swig sidebar.swig your.swig (新建，可以用来调用your.js,同时被例如post-details.swig等调用，需要去相应文件配置) scripts/ custom/ (新建，这里的所有js会在网页生成前被自动调用，写就成，不用关心怎么调用) yourauto.js source/ css/*/custom.styl custom/ (新建，这里的所有js会在网页生成后被调用，但是需要手动修改调用它的文件your.swig，添加调用) your.js 然后来个具体案例，请看：hexo博客配置-代码块折叠]]></content>
      <categories>
        <category>技术构架</category>
        <category>个人博客</category>
        <category>想法</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>技术构架</tag>
        <tag>个人博客</tag>
        <tag>想法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客搭建-用hexo-coding-next搭建个人博客]]></title>
    <url>%2FpublicBlog%2F2018-08-17-cb10f677.html</url>
    <content type="text"><![CDATA[总体思路 原则上，Hexo的运行环境与博客目录分离。 具体来讲，用Docker方式安Hexo，配置Docker里的git环境并建立与coding的链接；在本机建立博客目录，并配置主题、写博客；最后，运行，可配置快捷方式（本文是Linux系统，在.bashrc添加），运行博客系统或者发布博客。 安装和运行Hexo 方案一：直接安装。参考Hexo中文文档——安装，不赘述。 方案二：采用Docker。即采用如下的dokcerfile创建docker。 点击显/隐内容 12345678910111213141516171819202122232425262728## https://blog.csdn.net/u013076044/article/details/66289301## https://hub.docker.com/_/node/FROM node:10.9.0-jessieMAINTAINER ledong &lt;your@mail.com&gt;EXPOSE 4000ENV REFRESHED_AT 2018-08-15ENV HEXOWEBSITE=/opt/websiteTestVOLUME [$&#123;HEXOWEBSITE&#125;]WORKDIR $&#123;HEXOWEBSITE&#125;## https://segmentfault.com/q/1010000009487303?_ea=1946152## https://blog.csdn.net/u014792304/article/details/78687859## https://blog.csdn.net/hoshea_chx/article/details/78826689RUN cd $&#123;HEXOWEBSITE&#125; &amp;&amp;\ npm config set registry https://registry.npm.taobao.org &amp;&amp;\ npm install -g hexo-cliRUN git config --global user.email "your@mail.com" &amp;&amp;\ git config --global user.name "yourname" &amp;&amp;\ ssh-keygen -t rsa -f /root/.ssh/id_rsa -P "" -C "your@mail.com" &amp;&amp;\ cat /root/.ssh/id_rsa.pubWORKDIR /opt/ 点击显/隐内容 建立一个博客目录并配next主题 先绑定~/test/目录的方式进入docker 1docker run -it -p 4000:4000 --name myblog_hexo -v ~/test/:/opt/website myblog_hexo /bin/bash 在docker里的/opt/website/目录下，执行如下代码： 123hexo i blogcd ~/test/bloggit clone https://github.com/theme-next/hexo-theme-next themes/hexo-theme-next 这样在本地会有一个~/test/blog/文件夹，就是博客的主目录，修改其中的_config.yml更改主题 1theme: hexo-theme-next 运行博客 先在Linux系统中的~/.bashrc中加入如下代码（注意，这里绑定了博客目录~/test/blog/到docker的/opt/website） 123alias hbrun='docker stop myblog_hexo ; docker rm myblog_hexo ; docker run -it -p 4000:4000 --name myblog_hexo -v ~/test/blog/:/opt/website myblog_hexo /bin/bash 'alias hbs='docker stop myblog_hexo ; docker start myblog_hexo; docker exec -i myblog_hexo /bin/bash -c "cd /opt/website/; hexo clean; hexo g ; hexo s"'alias hb2git='docker stop myblog_hexo ; docker start myblog_hexo; docker exec -i myblog_hexo /bin/bash -c "cd /opt/website/; hexo clean; hexo g ; hexo d"' 然后，运行hbrun命令用于进入docker。若在本机进入~/test/blog/目录，运行hbs即可本地发布博客，浏览器输入http://localhost:4000/查看。而hb2git命令的使用，看下一部分。 使用git管理Hexo 一开始的dockerfile代码中，因为该docker是第一次用git，因此dockerfile里一定要运行如下命令(第二条可不运行)： 12git config --global user.email "your@email"git config --global user.name "yourname" 在coding上导入公钥/root/.ssh/id_rsa.pub后，测试是否成功（如果后面使用过程中出现连接错误，这个测试可以解决问题）： 12ssh -T git@git.coding.netssh -T git@github.com 接着在coding上注册一个项目yourblog，获取链接git@git.coding.net:youname/yourblog.git 之后，在主目录的_config.yml添加如下代码。注意有坑，主目录下_config.yml在配置deploy时要忽略掉.deploy_git文件夹，不然每次部署该目录由于递归存入会滚雪球增大。 123456789101112deploy: - type: git repository: git@git.coding.net:youname/yourblog.git branch: master - type: git repository: git@git.coding.net:youname/yourblog.git branch: hexo extend_dirs: / ignore_hidden: false ignore_pattern: public: . /: .deploy_git 然后，运行前面提到的hb2git命令，就可以把生成的网页目录~/test/blog/public/部署到coding项目的master分支；而整个博客项目~/test/blog/推送到hexo分支。 经过如此一番，就可以到coding上去部署自己网页啦。即打开浏览器，进入coding刚建立的项目yourblog，代码-pages服务，部署来源选择master，然后可以选择https访问。 另外，遇到换电脑时，只要Hexo已经安装好，下载hexo分支即可直接得到整个博客项目。 1git clone -b hexo git@git.coding.net:youname/yourblog.git 最后，为了管理主题方便，可用git来管理主题，请参考该文：hexo博客配置-主题管理与配置 注意事项 next主题从5到6的版本更新要注意，许多lib不能用了。从 NexT v5.1.x 更新 参考 Hexo中文文档——安装 基于docker的Hexo博客系统 使用coding和Hexo快速搭建博客 用Hexo + github搭建自己的博客 — 再也不用羡慕别人了 Hexo Next 四种主题 hexo的next主题个性化教程:打造炫酷网站 Hexo搭建个人博客–NexT主题优化-来自Alvabill 如何实现博客的public和整个Hexo备份-看知乎上“张钊”的回答]]></content>
      <categories>
        <category>技术构架</category>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>docker</tag>
        <tag>技术构架</tag>
        <tag>个人博客</tag>
        <tag>git</tag>
        <tag>coding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为什么用hexo-coding-next-docker构建个人博客]]></title>
    <url>%2FpublicBlog%2F2018-08-16-fa8e82cc.html</url>
    <content type="text"><![CDATA[为什么要写博客？ 平时总结； 管理笔记； 锻炼分享的心态。 为什么用Hexo+coding+next+docker？ 能在本地保存和管理博客，这是必须的！不喜欢放在各种网上，各种万一。支持标签归档、markdown，公式图表代码画图都要。开源好修改，既不傻瓜到不能配置，也不能复杂到要巨大精力投入。在网上看到用的最多的大概是Hexo和Jekyll,经过比较，选Hexo。 能够在网上展示和备份，网速好使。所以coding。 用的人多，方便找资料。所以next主题。 封装好，装机不麻烦。所以用docker。 参考： 如何开始写技术博客，怎么选择？知乎 为什么选择Hexo?]]></content>
      <categories>
        <category>想法</category>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>docker</tag>
        <tag>个人博客</tag>
        <tag>coding</tag>
        <tag>想法</tag>
        <tag>next</tag>
        <tag>为什么</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2FpublicBlog%2F2018-08-15-16107.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new "My New Post" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
